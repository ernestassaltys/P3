using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace U2
{
    class Dviratis
    {
        private int metai;
        private double kaina;

        public Dviratis(int metai, double kaina)
        {
            this.metai = metai;
            this.kaina = kaina;
        }

        public int ImtiMetus()
        {
            return metai;
        }
        public double ImtiKaina()
        {
            return kaina;
        }

    }
    class Program
    {
        static void Main(string[] args)
        {
            const int Cn = 100;
            Dviratis[] D1 = new Dviratis[Cn];
            int n1;
            int am1;
            string pav1;
            int kiekTinka1, kiekNetinka1;
            double sumaTinka1, sumaNetinka1;
            Dviratis[] D2 = new Dviratis[Cn];
            int n2;
            int am2;
            string pav2;
            int kiekTinka2, kiekNetinka2;
            double sumaTinka2, sumaNetinka2;
            const string CFd1 = "Duom1.txt";
            const string CFd2 = "Duom2.txt";

            Skaityti(CFd1, D1, out n1, out am1, out pav1);
            Pinigai(D1, n1, 0, am1, 2015, out kiekTinka1, out sumaTinka1);
            Pinigai(D1, n1, am1 + 1, 1000, 2015, out kiekNetinka1, out sumaNetinka1);
            Skaityti(CFd2, D2, out n2, out am2, out pav2);
            Pinigai(D2, n2, 0, am2, 2015, out kiekTinka2, out sumaTinka2);
            Pinigai(D2, n2, am2 + 1, 1000, 2015, out kiekNetinka2, out sumaNetinka2);
            double vidurkisTinka1 = Vidurkis(D1, n1, 2015, 0, am1);
            double vidurkisTinka2 = Vidurkis(D2, n2, 2015, 0, am2);
            double vidurkisNetinka1 = Vidurkis(D1, n1, 2015, am1 + 1, 1000);
            double vidurkisNetinka2 = Vidurkis(D2, n2, 2015, am2 + 1, 1000);
            double vidurkisVisu1 = Vidurkis(D1, n1, 2015, 0, 1000);
            double vidurkisVisu2 = Vidurkis(D2, n2, 2015, 0, 1000);
            Console.WriteLine("-----------Pirmas nuomos punktas-----------");
            Console.WriteLine("-----------{0}-----------", pav1);
            Console.WriteLine("Tinkami naudoti: {0}        {1:f2}", kiekTinka1, sumaTinka1);
            Console.WriteLine("Netinkami naudoti: {0}        {1:f2}", kiekNetinka1, sumaNetinka1);
            if (vidurkisTinka1 > 0)
                Console.WriteLine("Tinkamu naudoti dviraciu vidutinis amzius: {0:f2}", vidurkisTinka1);
            else
                Console.WriteLine("Tinkamu naudoti dviraciu nera");
            
            if (vidurkisNetinka1 > 0)
                Console.WriteLine("Netinkamu naudoti dviraciu vidutinis amzius: {0:f2}", vidurkisNetinka1);
            else
                Console.WriteLine("Netinkamu naudoti dviraciu nera");
            
            if (vidurkisVisu1 > 0)
                Console.WriteLine("Visu dviraciu vidutinis amzius: {0:f2}", vidurkisVisu1);

            Console.WriteLine("\n-----------Antras nuomos punktas-----------");
            Console.WriteLine("-----------{0}-----------", pav2);
            Console.WriteLine("Tinkami naudoti: {0}        {1:f2}", kiekTinka2, sumaTinka2);
            Console.WriteLine("Netinkami naudoti: {0}        {1:f2}", kiekNetinka2, sumaNetinka2);
            if (vidurkisTinka2 > 0)
                Console.WriteLine("Tinkamu naudoti dviraciu vidutinis amzius: {0:f2}", vidurkisTinka2);
            else
                Console.WriteLine("Tinkamu naudoti dviraciu nera");

            if (vidurkisNetinka2 > 0)
                Console.WriteLine("Netinkamu naudoti dviraciu vidutinis amzius: {0:f2}", vidurkisNetinka2);
            else
                Console.WriteLine("Netinkamu naudoti dviraciu nera");

            if (vidurkisVisu2 > 0)
                Console.WriteLine("Visu dviraciu vidutinis amzius: {0:f2}", vidurkisVisu2);
            TikrintiKieki(kiekTinka1, kiekTinka2, pav1, pav2);
            TikrintiKaina(sumaNetinka1 + sumaTinka1, sumaTinka2 + sumaNetinka2, pav1, pav2);

        }
        static void Skaityti(string fv, Dviratis[] D, out int n, out int m, out string pav)
        {
            int metai;
            double kaina;
            using (StreamReader reader = new StreamReader(fv))
            {
                string line;
                line = reader.ReadLine();
                string[] parts;
                pav = line;
                line = reader.ReadLine();
                m = int.Parse(line);
                line = reader.ReadLine();
                n = int.Parse(line);
                for (int i = 0; i < n; i++)
                {
                    line = reader.ReadLine();
                    parts = line.Split(';');
                    metai = int.Parse(parts[0]);
                    kaina = double.Parse(parts[1]);
                    D[i] = new Dviratis(metai, kaina);
                }
            }
        }
        static void Pinigai(Dviratis[] D, int n, int amPr, int amPb, int metai, out int kiek, out double suma)
        {
            kiek = 0;
            suma = 0.0;
            int amzius;
            for (int i = 0; i < n; i++)
            {
                amzius = metai - D[i].ImtiMetus();
                if ((amPr <= amzius) && (amzius <= amPb))
                {
                    suma = suma + D[i].ImtiKaina();
                    kiek++;
                }
            }
        }
        static double Vidurkis(Dviratis[] D, int n, int metai, int amPr, int amPb)
        {
            int kiek = 0, suma = 0;
            int amzius;
            for (int i = 0; i < n; i++)
            {
                amzius = metai - D[i].ImtiMetus();
                if ((amPr <= amzius) && (amzius <= amPb))
                {
                    suma = suma + amzius;
                    kiek++;
                }
            }
            if (kiek > 0)
            {
                return (double)suma / kiek;
            }
            else
                return 0.0;

        }
        static void TikrintiKieki(int kiek1, int kiek2, string pav1, string pav2)
        {
            if(kiek1 > kiek2)
            {
                Console.WriteLine("{0} nuomos punkte yra daugiau dviraciu tinkamu naudojimui", pav1);
            }
            else if (kiek2 > kiek1)
            {
                Console.WriteLine("{0} nuomos punkte yra daugiau dviraciu tinkamu naudojimui", pav2);
            }
            else if (kiek2 == kiek1)
            {
                Console.WriteLine("Abiejuose nuomos punktuose yra vienodai dviraciu tinkamu naudojimui");
            }
        }
        static void TikrintiKaina(double kaina1, double kaina2, string pav1, string pav2)
        {
            if (kaina1 > kaina2)
            {
                Console.WriteLine("{0} nuomos punkte yra didesne dviraciu pinigine verte", pav1);
            }
            else if (kaina2 > kaina1)
            {
                Console.WriteLine("{0} nuomos punkte yra didesne dviraciu pinigine verte", pav2);
            }
            else if (kaina2 == kaina1)
            {
                Console.WriteLine("Abiejuose nuomos punktuose yra vienoda dviraciu pinigine verte");
            }
        }
    }
}
